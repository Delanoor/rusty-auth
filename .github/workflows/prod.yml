name: Build and Deploy Frontend

# Trigger the workflow when changes are pushed to the main branch
on:
  push:
    branches:
      - main

env:
  BASE_PATH: ${{ vars.BASE_PATH }}
  NEXT_PUBLIC_API_URL: ${{ vars.NEXT_PUBLIC_API_URL }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the main repository code
      - name: Checkout main code
        uses: actions/checkout@v2

      # Clone the frontend repository
      - name: Clone frontend repository
        uses: actions/checkout@v2
        with:
          repository: delanoor/rusty-next
          path: frontend

      # Install Bun
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: "latest"

      # Install frontend dependencies
      - name: Install frontend dependencies
        working-directory: ./frontend
        run: bun install

      # Build frontend
      - name: Build frontend
        working-directory: ./frontend
        run: bun run build

      # Debug: List frontend directory contents
      - name: List frontend directory contents
        run: ls -la ./frontend

      # Debug: List .next directory contents
      - name: List .next directory contents
        run: ls -la ./frontend/.next

      # Set up Docker Buildx for multi-platform builds
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build and push Docker image
      - name: Build and push Docker image
        working-directory: ./frontend
        run: |
          docker build -t vinorelbine/rusty-next .
          docker tag vinorelbine/rusty-next:latest vinorelbine/rusty-next:${{ github.sha }}
          docker push vinorelbine/rusty-next:latest
          docker push vinorelbine/rusty-next:${{ github.sha }}

  deploy:
    needs: build
    runs-on: ubuntu-latest

    env:
      DROPLET_IP: ${{ vars.DROPLET_IP }}
      BASE_PATH: ${{ vars.BASE_PATH }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      NEXT_PUBLIC_API_URL: ${{ vars.NEXT_PUBLIC_API_URL }}
      NGINX_PORT: ${{ vars.NGINX_PORT }}
      NGINX_HTTPS_PORT: ${{ vars.NGINX_HTTPS_PORT }}
      APP_SERVICE_PORT: ${{ vars.APP_SERVICE_PORT }}

    steps:
      - name: Checkout main code
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Install sshpass
        run: sudo apt-get install -y sshpass

      - name: Copy compose.yml to droplet
        run: sshpass -p ${{ secrets.DROPLET_PASSWORD }} scp -o StrictHostKeyChecking=no compose.yml root@${{ vars.DROPLET_IP }}:~

      - name: Copy Nginx configuration to droplet
        run: sshpass -v -p ${{ secrets.DROPLET_PASSWORD }} scp -r -o StrictHostKeyChecking=no nginx root@${{ vars.DROPLET_IP }}:~

      - name: Copy Next.js build files to droplet
        run: |
          sshpass -p ${{ secrets.DROPLET_PASSWORD }} scp -o StrictHostKeyChecking=no -r ./frontend/.next root@${{ vars.DROPLET_IP }}:/var/www/html/

      - name: Deploy application
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.DROPLET_IP }}
          username: root
          password: ${{ secrets.DROPLET_PASSWORD }}
          script: |
            cd ~
            docker compose down
            docker compose pull
            docker compose up -d
