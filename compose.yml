version: "3.9"
services:
  # app-service:
  #   container_name: app-service
  #   image: vinorelbine/app-service
  #   restart: "always"
  #   environment:
  #     AUTH_SERVICE_IP: ${AUTH_SERVICE_IP}
  #     BASE_PATH: ${BASE_PATH}
  #   ports:
  #     - "8000:8000"
  #   depends_on:
  #     auth-service:
  #       condition: service_started
  #   networks:
  #     - cert-network
  app-service:
    container_name: app-service
    image: vinorelbine/rusty-next:latest
    restart: "always"
    environment:
      NEXT_PUBLIC_API_URL: http://auth-service:3000
    ports:
      - "8000:8000"
    depends_on:
      auth-service:
        condition: service_started
    networks:
      - cert-network

  auth-service:
    container_name: auth-service
    image: vinorelbine/auth-service
    restart: "always"
    environment:
      JWT_SECRET: ${JWT_SECRET}
      BASE_PATH: ${BASE_PATH}
      DATABASE_URL: "postgres://postgres:${POSTGRES_PASSWORD}@db:5432"
    ports:
      - "3000:3000"
    depends_on:
      - db
    networks:
      - cert-network

  db:
    image: postgres:15.2-alpine
    restart: always
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - db:/var/lib/postgresql/data
    networks:
      - cert-network

  redis:
    image: redis:7.0-alpine
    restart: always
    ports:
      - "6379:6379"
    networks:
      - cert-network

  reverse-proxy:
    container_name: nginx
    image: nginx:latest
    restart: "unless-stopped"
    ports:
      - "80:80"
      - "443:443"
    environment:
      NGINX_HOST: localhost
      NGINX_PORT: 80
      NGINX_HTTPS_PORT: 443
      AUTH_SERVICE_PORT: 3000
      APP_SERVICE_PORT: 8000
      DOMAIN: rustyauth.com
    volumes:
      - ./nginx/templates:/etc/nginx/templates
      - web-root:/var/www/html
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
    depends_on:
      app-service:
        condition: service_started
      auth-service:
        condition: service_started
    networks:
      - cert-network

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - web-root:/var/www/html
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
    depends_on:
      - reverse-proxy
    command: certonly --webroot --webroot-path=/var/www/html --email hwn0809@gmail.com --agree-tos --no-eff-email --force-renewal -d rustyauth.com -d www.rustyauth.com

volumes:
  certbot-etc:
  certbot-var:
  web-root:
    driver: local
  db:
    driver: local

networks:
  cert-network:
    driver: bridge
